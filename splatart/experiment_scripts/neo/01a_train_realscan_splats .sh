declare -a paris_base_folder=("/media/stanlew/Data/paris_dataset/dataset/load/")
declare -a output_base_folder=("/media/stanlew/Data/splatart_neo_data/")
declare -a preprocess_script=("splatart/scripts/data_processing/paris_to_nerfstudio.py")

cd ~/src/nerfstudio_splatart
ns-train splatfacto --data ${output_base_folder}/realscan/fridge/start/transforms_train.json --experiment_name splatart_neo --timestamp realscan_fridge_start --vis=viewer+tensorboard --pipeline.model.random_scale 0.1 --pipeline.model.camera_optimizer.mode off --pipeline.model.continue_cull_post_densification=False --pipeline.model.cull_alpha_thresh=0.005 --pipeline.model.use_scale_regularization True --viewer.quit-on-train-completion True
ns-train splatfacto --data ${output_base_folder}/realscan/fridge/end/transforms_train.json --experiment_name splatart_neo --timestamp realscan_fridge_end --vis=viewer+tensorboard --pipeline.model.random_scale 0.1 --pipeline.model.camera_optimizer.mode off --pipeline.model.continue_cull_post_densification=False --pipeline.model.cull_alpha_thresh=0.005 --pipeline.model.use_scale_regularization True --viewer.quit-on-train-completion True
ns-train splatfacto --data ${output_base_folder}/realscan/storage/start/transforms_train.json --experiment_name splatart_neo --timestamp realscan_storage_start --vis=viewer+tensorboard --pipeline.model.random_scale 0.1 --pipeline.model.camera_optimizer.mode off --pipeline.model.continue_cull_post_densification=False --pipeline.model.cull_alpha_thresh=0.005 --pipeline.model.use_scale_regularization True --viewer.quit-on-train-completion True
ns-train splatfacto --data ${output_base_folder}/realscan/storage/end/transforms_train.json --experiment_name splatart_neo --timestamp realscan_storage_end --vis=viewer+tensorboard --pipeline.model.random_scale 0.1 --pipeline.model.camera_optimizer.mode off --pipeline.model.continue_cull_post_densification=False --pipeline.model.cull_alpha_thresh=0.005 --pipeline.model.use_scale_regularization True --viewer.quit-on-train-completion True